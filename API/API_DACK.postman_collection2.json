{
	"info": {
		"_postman_id": "89a18ba0-bc69-433e-8bd2-bf9e74a0ceb7",
		"name": "API_DACK",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "20826362"
	},
	"item": [
		{
			"name": "dangnhap_dangky",
			"item": [
				{
					"name": "dangky",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Set accessToken into collection variable', () => {\r",
									"    var res = pm.response.json();\r",
									"    //var token = res.data.access_token;\r",
									"    var email = res.data.email;\r",
									"    var password = res.data.password;\r",
									"    var username = res.data.username;\r",
									"    //pm.collectionVariables.set('token', token);\r",
									"    pm.collectionVariables.set('userName', username);\r",
									"    pm.collectionVariables.set('email', email);\r",
									"    pm.collectionVariables.set('password', password);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"thanhvinh_dev\",\r\n    \"email\":\"vinhdo405.com\",\r\n    \"password\":\"vinh2002\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{Url}}/register"
					},
					"response": []
				},
				{
					"name": "dangnhap",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Set accessToken into collection variable', () => {\r",
									"    var token = pm.response.json().data.access_token;\r",
									"    console.log(token);\r",
									"    pm.collectionVariables.set('access_token', token);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"vinhdo405.com\",\r\n    \"password\":\"vinh2002\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{Url}}/login"
					},
					"response": []
				},
				{
					"name": "dangky vÆ¡i email da ton tai",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.json().hasOwnProperty('data')) {\r",
									"    pm.test('Set accessToken into environment variable', () => {\r",
									"        var res = pm.response.json();\r",
									"        var token = res.data.access_token;\r",
									"        var email = res.data.email;\r",
									"        var password = res.data.password;\r",
									"        pm.collectionVariables.set('token', token);\r",
									"        pm.collectionVariables.set('email', email);\r",
									"        pm.collectionVariables.set('password', password);\r",
									"    })\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"thanhvinh_dev\",\r\n    \"email\": \"vinhdo4055.com\",\r\n    \"password\": \"vinh2002\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{Url}}/register"
					},
					"response": []
				},
				{
					"name": "list user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{access_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{Url}}/auth/users"
					},
					"response": []
				},
				{
					"name": "find user by email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{access_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Url}}/auth/users/:email",
							"host": [
								"{{Url}}"
							],
							"path": [
								"auth",
								"users",
								":email"
							],
							"variable": [
								{
									"key": "email",
									"value": "{{email}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "login with wrong email",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"vinhdo4055555.com\",\r\n    \"password\":\"vinh2002\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{Url}}/login"
					},
					"response": []
				}
			]
		},
		{
			"name": "get products",
			"item": [
				{
					"name": "Get list products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"List of products request status\", ()=>{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"// Only for debug\r",
									"var productIds = _.map(pm.response.json(), 'id');\r",
									"console.log(productIds);\r",
									"pm.globals.set(\"productIds\", productIds);\r",
									"for (let productIda of productIds) {  \r",
									"    console.log(productIda);  \r",
									"}\r",
									"const randomproductId = Math.floor(Math.random() * productIds.length);\r",
									"console.log(randomproductId, productIds[randomproductId]);\r",
									"pm.collectionVariables.set(\"productId\",productIds[randomproductId]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{Url}}/Iphone"
					},
					"response": []
				},
				{
					"name": "get single product",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Url}}/iphone/:iphoneId",
							"host": [
								"{{Url}}"
							],
							"path": [
								"iphone",
								":iphoneId"
							],
							"variable": [
								{
									"key": "iphoneId",
									"value": "{{productId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "orders",
			"item": [
				{
					"name": "order iphone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"orderId\", pm.response.json().data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"productId\": {{productId}},\r\n    \"customerName\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{Url}}/auth/orders"
					},
					"response": []
				},
				{
					"name": "order iphone fail",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"productId\": 2,\r\n    \"customerName\": \"{{$randomUserName}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{Url}}/auth/orders"
					},
					"response": []
				},
				{
					"name": "update an order",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerName\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Url}}/auth/orders/:id",
							"host": [
								"{{Url}}"
							],
							"path": [
								"auth",
								"orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get all order",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{Url}}/auth/orders"
					},
					"response": []
				},
				{
					"name": "get item with id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", ()=>{\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Url}}/auth/orders/:id",
							"host": [
								"{{Url}}"
							],
							"path": [
								"auth",
								"orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete order",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Url}}/auth/orders/:id",
							"host": [
								"{{Url}}"
							],
							"path": [
								"auth",
								"orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "{{access_token}}"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{access_token}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var code = pm.response.code;",
					"",
					"if(code === 200){",
					"    pm.test(\"Status code is 200\", function () {",
					"        pm.response.to.have.status(200);",
					"    });",
					"} else if(code === 204) {",
					"    pm.test(\"Status code is 204\", function () {",
					"        pm.response.to.have.status(204);",
					"    });",
					"} else if(code === 401) {",
					"    pm.test(\"Status code is 401\", function () {",
					"        // pm.response.to.have.status(401);",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "Url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "userName",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "productId",
			"value": ""
		},
		{
			"key": "orderId",
			"value": ""
		}
	]
}